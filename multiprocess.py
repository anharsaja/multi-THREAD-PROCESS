# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_wHinuy0Se-Xh4sY_9vSm1A3x8kJdiOA
"""

from concurrent.futures import ProcessPoolExecutor


import multiprocessing
import os
import time

data = []

def square(x: int):
    global data
    print('square process id: {}'.format(os.getpid()))
    hasil1 = 'square: {}'.format(x ** 2)
    time.sleep(2)
    data.append(hasil1)

def cube(x: int):
    print('cube process id: {}'.format(os.getpid()))
    hasil2 = 'cube: {}'.format(x * 2)
    time.sleep(2)
    return hasil2

def cube2(x: int):
    print('cube process id: {}'.format(os.getpid()))
    hasil3 = 'cube2: {}'.format(x * 3)
    time.sleep(2)
    return hasil3

def cube3(x: int):
    print('cube process id: {}'.format(os.getpid()))
    hasil4 = 'cube3: {}'.format(x * 4)
    time.sleep(2)
    return hasil4




# t1 = time.time()

# square(10)
# cube(10)
# print('done')

# t_exec = time.time() - t1
# print('waktu eksekusi : ',t_exec)




# ===================== MULTIPROCESS ==========================




if __name__ == "__main__":
    t1 = time.time()
    print('Main process id: {}'.format(os.getpid()))
    # p1 = multiprocessing.Process(target=square, args=(10,))
    # p2 = multiprocessing.Process(target=cube, args=(10,))
    # p3 = multiprocessing.Process(target=cube2, args=(10,))
    # p4 = multiprocessing.Process(target=cube3, args=(10,))

    #     # Membuat executor dengan menggunakan ProcessPoolExecutor
    with ProcessPoolExecutor() as executor:
        # Mengeksekusi tugas secara paralel
        results = executor.map(square, [1,2,3])
        results2 = executor.map(cube, [1,2,3,4])

    # Mengakses hasil dari tugas yang dieksekusi
    for result in results:
        print(result)

    for result in results2:
        print(result)

    # p1.start()
    # p2.start()
    # p3.start()
    # p4.start()

    # p1.join()
    # p2.join()
    # p3.join()
    # p4.join()
    print(data)
    print("done")
    t_exec = time.time() - t1
    print('waktu eksekusi : ',t_exec)